uint8 DEFAULT_MIN_ELECTION_TIMEOUT = 2      # [second]
uint8 DEFAULT_MAX_ELECTION_TIMEOUT = 4      # [second]
# Given the minimum election timeout and the cluster size,
# the maximum recommended request interval can be derived as follows:
#
#   max recommended request interval = (min election timeout) / 2 requests / (cluster size - 1)
#
# The equation assumes that the Leader requests one Follower at a time, so that there's at most one pending call
# at any moment. Such behavior is optimal as it creates a uniform bus load, although it is implementation-specific.
# Obviously, the request interval can be lower than that if needed, but higher values are not recommended as they may
# cause Followers to initiate premature elections in case of frame losses or delays.
#
# The timeout value is randomized in the range (MIN, MAX], according to the Raft paper. The randomization granularity
# should be at least one millisecond or higher.

uint32 term
uint32 prev_log_term
uint16 prev_log_index
uint16 leader_commit
# Refer to the Raft paper for explanation.

Entry.1.0[<=1] entries

@assert _offset_ % 8 == {0}
@extent 512 * 8

---

uint32 term
bool success
# Refer to the Raft paper for explanation.

@extent 48 * 8
